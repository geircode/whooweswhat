//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("WoWModel", "PersonCustomer", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WhoOwesWhat.Domain.Person), "Customer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WhoOwesWhat.Domain.Customer), true)]
[assembly: EdmRelationshipAttribute("WoWModel", "PostPayer", "Post", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WhoOwesWhat.Domain.Post), "Payer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WhoOwesWhat.Domain.Payer), true)]
[assembly: EdmRelationshipAttribute("WoWModel", "PostConsumer", "Post", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WhoOwesWhat.Domain.Post), "Consumer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WhoOwesWhat.Domain.Consumer), true)]
[assembly: EdmRelationshipAttribute("WoWModel", "GroupPost", "Group", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WhoOwesWhat.Domain.Group), "Post", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WhoOwesWhat.Domain.Post), true)]

#endregion

namespace WhoOwesWhat.Domain
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class WoWModelContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new WoWModelContainer object using the connection string found in the 'WoWModelContainer' section of the application configuration file.
        /// </summary>
        public WoWModelContainer() : base("name=WoWModelContainer", "WoWModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new WoWModelContainer object.
        /// </summary>
        public WoWModelContainer(string connectionString) : base(connectionString, "WoWModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new WoWModelContainer object.
        /// </summary>
        public WoWModelContainer(EntityConnection connection) : base(connection, "WoWModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Person> PersonSet
        {
            get
            {
                if ((_PersonSet == null))
                {
                    _PersonSet = base.CreateObjectSet<Person>("PersonSet");
                }
                return _PersonSet;
            }
        }
        private ObjectSet<Person> _PersonSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Post> PostSet
        {
            get
            {
                if ((_PostSet == null))
                {
                    _PostSet = base.CreateObjectSet<Post>("PostSet");
                }
                return _PostSet;
            }
        }
        private ObjectSet<Post> _PostSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Group> GroupSet
        {
            get
            {
                if ((_GroupSet == null))
                {
                    _GroupSet = base.CreateObjectSet<Group>("GroupSet");
                }
                return _GroupSet;
            }
        }
        private ObjectSet<Group> _GroupSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Customer> CustomerSet
        {
            get
            {
                if ((_CustomerSet == null))
                {
                    _CustomerSet = base.CreateObjectSet<Customer>("CustomerSet");
                }
                return _CustomerSet;
            }
        }
        private ObjectSet<Customer> _CustomerSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Version4> Version4
        {
            get
            {
                if ((_Version4 == null))
                {
                    _Version4 = base.CreateObjectSet<Version4>("Version4");
                }
                return _Version4;
            }
        }
        private ObjectSet<Version4> _Version4;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PersonSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPersonSet(Person person)
        {
            base.AddObject("PersonSet", person);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PostSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPostSet(Post post)
        {
            base.AddObject("PostSet", post);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GroupSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGroupSet(Group group)
        {
            base.AddObject("GroupSet", group);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CustomerSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCustomerSet(Customer customer)
        {
            base.AddObject("CustomerSet", customer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Version4 EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVersion4(Version4 version4)
        {
            base.AddObject("Version4", version4);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WoWModel", Name="Consumer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Consumer : Customer
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Consumer object.
        /// </summary>
        /// <param name="customerId">Initial value of the CustomerId property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        /// <param name="relativeAmountInPercentage">Initial value of the RelativeAmountInPercentage property.</param>
        /// <param name="amountIsSetManually">Initial value of the AmountIsSetManually property.</param>
        /// <param name="personId">Initial value of the PersonId property.</param>
        /// <param name="postId">Initial value of the PostId property.</param>
        public static Consumer CreateConsumer(global::System.Int32 customerId, global::System.Single amount, global::System.Int32 relativeAmountInPercentage, global::System.Boolean amountIsSetManually, global::System.Int32 personId, global::System.Int32 postId)
        {
            Consumer consumer = new Consumer();
            consumer.CustomerId = customerId;
            consumer.Amount = amount;
            consumer.RelativeAmountInPercentage = relativeAmountInPercentage;
            consumer.AmountIsSetManually = amountIsSetManually;
            consumer.PersonId = personId;
            consumer.PostId = postId;
            return consumer;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PostId
        {
            get
            {
                return _PostId;
            }
            set
            {
                OnPostIdChanging(value);
                ReportPropertyChanging("PostId");
                _PostId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PostId");
                OnPostIdChanged();
            }
        }
        private global::System.Int32 _PostId;
        partial void OnPostIdChanging(global::System.Int32 value);
        partial void OnPostIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WoWModel", "PostConsumer", "Post")]
        public Post Post
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Post>("WoWModel.PostConsumer", "Post").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Post>("WoWModel.PostConsumer", "Post").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Post> PostReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Post>("WoWModel.PostConsumer", "Post");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Post>("WoWModel.PostConsumer", "Post", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WoWModel", Name="Customer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(Payer))]
    [KnownTypeAttribute(typeof(Consumer))]
    public abstract partial class Customer : EntityObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CustomerId
        {
            get
            {
                return _CustomerId;
            }
            internal set
            {
                if (_CustomerId != value)
                {
                    OnCustomerIdChanging(value);
                    ReportPropertyChanging("CustomerId");
                    _CustomerId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CustomerId");
                    OnCustomerIdChanged();
                }
            }
        }
        private global::System.Int32 _CustomerId;
        partial void OnCustomerIdChanging(global::System.Int32 value);
        partial void OnCustomerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Single _Amount;
        partial void OnAmountChanging(global::System.Single value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RelativeAmountInPercentage
        {
            get
            {
                return _RelativeAmountInPercentage;
            }
            set
            {
                OnRelativeAmountInPercentageChanging(value);
                ReportPropertyChanging("RelativeAmountInPercentage");
                _RelativeAmountInPercentage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RelativeAmountInPercentage");
                OnRelativeAmountInPercentageChanged();
            }
        }
        private global::System.Int32 _RelativeAmountInPercentage;
        partial void OnRelativeAmountInPercentageChanging(global::System.Int32 value);
        partial void OnRelativeAmountInPercentageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean AmountIsSetManually
        {
            get
            {
                return _AmountIsSetManually;
            }
            set
            {
                OnAmountIsSetManuallyChanging(value);
                ReportPropertyChanging("AmountIsSetManually");
                _AmountIsSetManually = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AmountIsSetManually");
                OnAmountIsSetManuallyChanged();
            }
        }
        private global::System.Boolean _AmountIsSetManually;
        partial void OnAmountIsSetManuallyChanging(global::System.Boolean value);
        partial void OnAmountIsSetManuallyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonId
        {
            get
            {
                return _PersonId;
            }
            set
            {
                OnPersonIdChanging(value);
                ReportPropertyChanging("PersonId");
                _PersonId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonId");
                OnPersonIdChanged();
            }
        }
        private global::System.Int32 _PersonId;
        partial void OnPersonIdChanging(global::System.Int32 value);
        partial void OnPersonIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WoWModel", "PersonCustomer", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("WoWModel.PersonCustomer", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("WoWModel.PersonCustomer", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("WoWModel.PersonCustomer", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("WoWModel.PersonCustomer", "Person", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WoWModel", Name="Group")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Group : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Group object.
        /// </summary>
        /// <param name="groupId">Initial value of the GroupId property.</param>
        /// <param name="groupGuid">Initial value of the GroupGuid property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static Group CreateGroup(global::System.Int32 groupId, global::System.Guid groupGuid, global::System.String name, global::System.Boolean isDeleted)
        {
            Group group = new Group();
            group.GroupId = groupId;
            group.GroupGuid = groupGuid;
            group.Name = name;
            group.IsDeleted = isDeleted;
            return group;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GroupId
        {
            get
            {
                return _GroupId;
            }
            internal set
            {
                if (_GroupId != value)
                {
                    OnGroupIdChanging(value);
                    ReportPropertyChanging("GroupId");
                    _GroupId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GroupId");
                    OnGroupIdChanged();
                }
            }
        }
        private global::System.Int32 _GroupId;
        partial void OnGroupIdChanging(global::System.Int32 value);
        partial void OnGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid GroupGuid
        {
            get
            {
                return _GroupGuid;
            }
            set
            {
                OnGroupGuidChanging(value);
                ReportPropertyChanging("GroupGuid");
                _GroupGuid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupGuid");
                OnGroupGuidChanged();
            }
        }
        private global::System.Guid _GroupGuid;
        partial void OnGroupGuidChanging(global::System.Guid value);
        partial void OnGroupGuidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WoWModel", "GroupPost", "Post")]
        public EntityCollection<Post> Posts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Post>("WoWModel.GroupPost", "Post");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Post>("WoWModel.GroupPost", "Post", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WoWModel", Name="Payer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Payer : Customer
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Payer object.
        /// </summary>
        /// <param name="customerId">Initial value of the CustomerId property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        /// <param name="relativeAmountInPercentage">Initial value of the RelativeAmountInPercentage property.</param>
        /// <param name="amountIsSetManually">Initial value of the AmountIsSetManually property.</param>
        /// <param name="personId">Initial value of the PersonId property.</param>
        /// <param name="postId">Initial value of the PostId property.</param>
        public static Payer CreatePayer(global::System.Int32 customerId, global::System.Single amount, global::System.Int32 relativeAmountInPercentage, global::System.Boolean amountIsSetManually, global::System.Int32 personId, global::System.Int32 postId)
        {
            Payer payer = new Payer();
            payer.CustomerId = customerId;
            payer.Amount = amount;
            payer.RelativeAmountInPercentage = relativeAmountInPercentage;
            payer.AmountIsSetManually = amountIsSetManually;
            payer.PersonId = personId;
            payer.PostId = postId;
            return payer;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PostId
        {
            get
            {
                return _PostId;
            }
            set
            {
                OnPostIdChanging(value);
                ReportPropertyChanging("PostId");
                _PostId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PostId");
                OnPostIdChanged();
            }
        }
        private global::System.Int32 _PostId;
        partial void OnPostIdChanging(global::System.Int32 value);
        partial void OnPostIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WoWModel", "PostPayer", "Post")]
        public Post Post
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Post>("WoWModel.PostPayer", "Post").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Post>("WoWModel.PostPayer", "Post").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Post> PostReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Post>("WoWModel.PostPayer", "Post");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Post>("WoWModel.PostPayer", "Post", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WoWModel", Name="Person")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Person : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Person object.
        /// </summary>
        /// <param name="personId">Initial value of the PersonId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="personGuid">Initial value of the PersonGuid property.</param>
        /// <param name="fullName">Initial value of the FullName property.</param>
        public static Person CreatePerson(global::System.Int32 personId, global::System.String userName, global::System.Guid personGuid, global::System.String fullName)
        {
            Person person = new Person();
            person.PersonId = personId;
            person.UserName = userName;
            person.PersonGuid = personGuid;
            person.FullName = fullName;
            return person;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonId
        {
            get
            {
                return _PersonId;
            }
            private set
            {
                if (_PersonId != value)
                {
                    OnPersonIdChanging(value);
                    ReportPropertyChanging("PersonId");
                    _PersonId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PersonId");
                    OnPersonIdChanged();
                }
            }
        }
        private global::System.Int32 _PersonId;
        partial void OnPersonIdChanging(global::System.Int32 value);
        partial void OnPersonIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            private set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PersonGuid
        {
            get
            {
                return _PersonGuid;
            }
            private set
            {
                OnPersonGuidChanging(value);
                ReportPropertyChanging("PersonGuid");
                _PersonGuid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonGuid");
                OnPersonGuidChanged();
            }
        }
        private global::System.Guid _PersonGuid;
        partial void OnPersonGuidChanging(global::System.Guid value);
        partial void OnPersonGuidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        private global::System.String PasswordHash
        {
            get
            {
                return _PasswordHash;
            }
            set
            {
                OnPasswordHashChanging(value);
                ReportPropertyChanging("PasswordHash");
                _PasswordHash = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PasswordHash");
                OnPasswordHashChanged();
            }
        }
        private global::System.String _PasswordHash;
        partial void OnPasswordHashChanging(global::System.String value);
        partial void OnPasswordHashChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        private global::System.String PasswordSalt
        {
            get
            {
                return _PasswordSalt;
            }
            set
            {
                OnPasswordSaltChanging(value);
                ReportPropertyChanging("PasswordSalt");
                _PasswordSalt = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PasswordSalt");
                OnPasswordSaltChanged();
            }
        }
        private global::System.String _PasswordSalt;
        partial void OnPasswordSaltChanging(global::System.String value);
        partial void OnPasswordSaltChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WoWModel", "PersonCustomer", "Customer")]
        public EntityCollection<Customer> Customers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Customer>("WoWModel.PersonCustomer", "Customer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Customer>("WoWModel.PersonCustomer", "Customer", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WoWModel", Name="Post")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Post : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Post object.
        /// </summary>
        /// <param name="postId">Initial value of the PostId property.</param>
        /// <param name="postGuid">Initial value of the PostGuid property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="totalCost">Initial value of the TotalCost property.</param>
        /// <param name="iSO4217CurrencyCode">Initial value of the ISO4217CurrencyCode property.</param>
        /// <param name="version">Initial value of the Version property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static Post CreatePost(global::System.Int32 postId, global::System.Guid postGuid, global::System.DateTime date, global::System.String description, global::System.Single totalCost, global::System.String iSO4217CurrencyCode, global::System.Int32 version, global::System.Boolean isDeleted)
        {
            Post post = new Post();
            post.PostId = postId;
            post.PostGuid = postGuid;
            post.Date = date;
            post.Description = description;
            post.TotalCost = totalCost;
            post.ISO4217CurrencyCode = iSO4217CurrencyCode;
            post.Version = version;
            post.IsDeleted = isDeleted;
            return post;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PostId
        {
            get
            {
                return _PostId;
            }
            internal set
            {
                if (_PostId != value)
                {
                    OnPostIdChanging(value);
                    ReportPropertyChanging("PostId");
                    _PostId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PostId");
                    OnPostIdChanged();
                }
            }
        }
        private global::System.Int32 _PostId;
        partial void OnPostIdChanging(global::System.Int32 value);
        partial void OnPostIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PostGuid
        {
            get
            {
                return _PostGuid;
            }
            set
            {
                OnPostGuidChanging(value);
                ReportPropertyChanging("PostGuid");
                _PostGuid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PostGuid");
                OnPostGuidChanged();
            }
        }
        private global::System.Guid _PostGuid;
        partial void OnPostGuidChanging(global::System.Guid value);
        partial void OnPostGuidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single TotalCost
        {
            get
            {
                return _TotalCost;
            }
            private set
            {
                OnTotalCostChanging(value);
                ReportPropertyChanging("TotalCost");
                _TotalCost = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalCost");
                OnTotalCostChanged();
            }
        }
        private global::System.Single _TotalCost;
        partial void OnTotalCostChanging(global::System.Single value);
        partial void OnTotalCostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ISO4217CurrencyCode
        {
            get
            {
                return _ISO4217CurrencyCode;
            }
            set
            {
                OnISO4217CurrencyCodeChanging(value);
                ReportPropertyChanging("ISO4217CurrencyCode");
                _ISO4217CurrencyCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ISO4217CurrencyCode");
                OnISO4217CurrencyCodeChanged();
            }
        }
        private global::System.String _ISO4217CurrencyCode;
        partial void OnISO4217CurrencyCodeChanging(global::System.String value);
        partial void OnISO4217CurrencyCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Version
        {
            get
            {
                return _Version;
            }
            private set
            {
                OnVersionChanging(value);
                ReportPropertyChanging("Version");
                _Version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Version");
                OnVersionChanged();
            }
        }
        private global::System.Int32 _Version;
        partial void OnVersionChanging(global::System.Int32 value);
        partial void OnVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        private Nullable<global::System.Int32> GroupId
        {
            get
            {
                return _GroupId;
            }
            set
            {
                OnGroupIdChanging(value);
                ReportPropertyChanging("GroupId");
                _GroupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupId");
                OnGroupIdChanged();
            }
        }
        private Nullable<global::System.Int32> _GroupId;
        partial void OnGroupIdChanging(Nullable<global::System.Int32> value);
        partial void OnGroupIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WoWModel", "PostPayer", "Payer")]
        public EntityCollection<Payer> Payers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Payer>("WoWModel.PostPayer", "Payer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Payer>("WoWModel.PostPayer", "Payer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WoWModel", "PostConsumer", "Consumer")]
        public EntityCollection<Consumer> Consumers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Consumer>("WoWModel.PostConsumer", "Consumer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Consumer>("WoWModel.PostConsumer", "Consumer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WoWModel", "GroupPost", "Group")]
        public Group Group
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("WoWModel.GroupPost", "Group").Value;
            }
            private set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("WoWModel.GroupPost", "Group").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Group> GroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("WoWModel.GroupPost", "Group");
            }
            private set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Group>("WoWModel.GroupPost", "Group", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WoWModel", Name="Version4")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Version4 : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Version4 object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Version4 CreateVersion4(global::System.Int32 id)
        {
            Version4 version4 = new Version4();
            version4.Id = id;
            return version4;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion
    
    }

    #endregion
    
}
